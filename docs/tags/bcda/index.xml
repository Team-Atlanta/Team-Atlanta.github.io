<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bcda on Team Atlanta</title>
    <link>http://localhost:1313/tags/bcda/</link>
    <description>Recent content in Bcda on Team Atlanta</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Aug 2025 11:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/bcda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>BCDA: The AI Detective Separating Real Bugs from False Alarms</title>
      <link>http://localhost:1313/blog/post-mlla-bcda/</link>
      <pubDate>Thu, 28 Aug 2025 11:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/post-mlla-bcda/</guid>
      <description>&lt;h2 id=&#34;-from-potential-sink-to-actionable-intelligence&#34;&gt;ðŸŽ¯ From Potential Sink to Actionable Intelligence&lt;/h2&gt;&#xA;&lt;p&gt;BCDA(Bug Candidate Detection Agent)&amp;rsquo;s core mission is to address the fundamental challenge of lightweight sink analysis: distinguishing real vulnerabilities from false-positive noise.&#xA;When MCGA, our cartographer, flags a function containing a potentially vulnerable &amp;ldquo;sink&amp;rdquo; (such as a function that executes system commands), BCDA takes over.&lt;/p&gt;&#xA;&lt;p&gt;Its job isn&amp;rsquo;t just to say &amp;ldquo;yes&amp;rdquo; or &amp;ldquo;no.&amp;rdquo;&#xA;BCDA performs a deep, multi-stage investigation powered by LLMs to produce a &lt;strong&gt;Bug Inducing Thing (BIT)&lt;/strong&gt;.&#xA;A BIT is a high-fidelity, structured report detailing a confirmed vulnerability candidate.&#xA;It includes the exact location, the specific trigger conditions (like &lt;code&gt;if-else&lt;/code&gt; branches), and a detailed analysis generated by LLMs.&#xA;This report becomes a detailed guide for our demolition expert, BGA, and the fuzzing stages.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
